import com.mbenabda.techwatch.testES.domain.*
import com.mbenabda.techwatch.testES.facts.suggestion.*
import com.mbenabda.techwatch.testES.facts.weight.*
import com.mbenabda.techwatch.testES.facts.budget.*
import com.mbenabda.techwatch.testES.facts.dedication.*
import com.mbenabda.techwatch.testES.facts.storage.*
import com.mbenabda.techwatch.testES.facts.*
import com.mbenabda.techwatch.testES.facts.answers.*
import java.util.Arrays
import com.google.common.base.Joiner

rule "suggest genres"
when
    $dob: DateOfBirth()
    $genre: Genre()
    eval(wasYoungAdultDuringGoldenAge($dob, $genre))
then
    insert(new GenreSuggestion($genre));
end

rule "suggest instruments"
when
    $instrument: Instrument()
    CanAfford(instrumentId == $instrument.id)
    not TakesTooMuchTimeToLearn(instrumentId == $instrument.id)
    not BlacklistedKindOfInstruments(kindCode == $instrument.kind)
    not PlaysInstrument(instrumentId == $instrument.id)
    not TakesTooMuchSpace(instrumentId == $instrument.id)
//    (sedentary || (nomad && not IsHeavy(instrumentId == $instrument.name)))
//    not IsTooLoud((instrumentId == $instrument.name)
//    not BlacklistedCategoryOfInstruments(categoryCode == $instrument.category)
then
    insert(new InstrumentSuggestion($instrument));
end

function boolean wasYoungAdultDuringGoldenAge(DateOfBirth dob, Genre g) {
    Integer yearOfBirth = dob.getValue().getYear();
    int yearOfTwenty = yearOfBirth + 20;
    int yearOfThirty = yearOfBirth + 30;
    return (g.getGoldenAgeStartingYear() >= yearOfTwenty && g.getGoldenAgeEndingYear() <= yearOfThirty)
        || (yearOfTwenty <= g.getGoldenAgeStartingYear() && g.getGoldenAgeStartingYear() <= yearOfThirty)
        || (yearOfTwenty <= g.getGoldenAgeEndingYear() && g.getGoldenAgeEndingYear() <= yearOfThirty)
        ;
}
