import com.mbenabda.techwatch.testES.domain.*
import com.mbenabda.techwatch.testES.facts.suggestion.*
import com.mbenabda.techwatch.testES.facts.weight.*
import com.mbenabda.techwatch.testES.facts.budget.*
import com.mbenabda.techwatch.testES.facts.dedication.*
import com.mbenabda.techwatch.testES.facts.storage.*
import com.mbenabda.techwatch.testES.facts.answers.*
import com.mbenabda.techwatch.testES.facts.instruments.*
import com.mbenabda.techwatch.testES.facts.noise.*
import com.mbenabda.techwatch.testES.facts.*
import java.util.Arrays
import com.google.common.base.Joiner

rule "suggest genres"
when
    $dob: DateOfBirth()
    $genre: Genre()
    eval(wasYoungAdultDuringGoldenAge($dob, $genre))
then
    insert(new GenreSuggestion($genre.getId()));
end

rule "suggest instruments"
when
    String(this == "suggest")
    $instrument: Instrument()
    $genre: Genre()
    not InstrumentSuggestion(instrument == $instrument)
    not BlacklistedKindOfInstruments(kindCode == $instrument.kind)
    not PlaysInstrument(instrumentId == $instrument.id)
    CharacteristicInstrument(genreId == $genre.id, instrumentId == $instrument.id)
    GenreSuggestion(genreId == $genre.id)
    LikesGenre(genreId == $genre.id)
    CanAfford(instrumentId == $instrument.id)
    not IsTooHeavy(instrumentId == $instrument.id)
    not IsTooLoud(instrumentId == $instrument.id)
    not TakesTooMuchTimeToLearn(instrumentId == $instrument.id)
    not TakesTooMuchSpace(instrumentId == $instrument.id)
then
    insert(new InstrumentSuggestion($instrument));
end

function boolean wasYoungAdultDuringGoldenAge(DateOfBirth dob, Genre g) {
    Integer yearOfBirth = dob.getValue().getYear();
    int yearOfTwenty = yearOfBirth + 20;
    int yearOfThirty = yearOfBirth + 30;

    return yearOfTwenty <= g.getGoldenAgeEndingYear()
        && yearOfThirty >= g.getGoldenAgeStartingYear();
}
